{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/game-interface/game-interface.component.ts","./src/app/game-interface/game-interface.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/auth.service.ts","./src/app/services/send-data.service.ts","./src/app/services/trivia.service.ts","./src/app/setup/player-dialog/player-dialog.component.ts","./src/app/setup/player-dialog/player-dialog.component.html","./src/app/setup/same-amount.directive.ts","./src/app/setup/setup.component.ts","./src/app/setup/setup.component.html","./src/app/user-stats/user-stats.component.ts","./src/app/user-stats/user-stats.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SetupComponent } from './setup/setup.component';\nimport { LoginComponent } from './login/login.component';\nimport { GameInterfaceComponent } from './game-interface/game-interface.component'\n\nimport { redirectUnauthorizedTo, canActivate } from '@angular/fire/auth-guard';\nimport { UserStatsComponent } from './user-stats/user-stats.component';\n\nconst redirectUnauthorizedToLogin = () => redirectUnauthorizedTo(['log-in']);\n\nconst routes: Routes = [\n  {\n    path: 'set-up',\n    component: SetupComponent,\n    ...canActivate(redirectUnauthorizedToLogin)\n  },\n  { path: 'log-in', component: LoginComponent },\n  {\n    path: 'game',\n    component: GameInterfaceComponent,\n    ...canActivate(redirectUnauthorizedToLogin)\n  },\n  {\n    path: 'userStats',\n    component: UserStatsComponent,\n    ...canActivate(redirectUnauthorizedToLogin)\n  },\n  { path: '**', redirectTo: 'log-in' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { User } from './interfaces/user';\nimport { TriviaService } from './services/trivia.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'trivia';\n\n  loggedIn: boolean;\n  firstName: string;\n\n  userAvatarURL: string;\n\n  defaultAvatarURL: string = 'https://i0.wp.com/www.mvhsoracle.com/wp-content/uploads/2018/08/default-avatar.jpg?ssl=1';\n\n  constructor(\n    private authService: AuthService,\n    private triviaService: TriviaService\n  ) { }\n\n  ngOnInit() {\n    this.authService.userIdChange.subscribe(id => {\n      if (id !== '') {\n        this.triviaService.getCurrentUserObservable(id).subscribe(user => {\n          this.userAvatarURL = user.photoURL;\n        });\n      }\n    });\n\n    this.authService.loggedInChange.subscribe(bool => {\n      this.loggedIn = bool;\n    });\n\n    this.authService.firstNameChange.subscribe(firstName => {\n      this.firstName = firstName;\n    });\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n  getDefaultUsername(email: string): string {\n    return email.replace(/@.+/, '');\n  }\n}\n","<mat-toolbar color=\"accent\">\n  <mat-toolbar-row id=\"toolbar-row\">\n    <h1>Trivia</h1>\n\n    <div id=\"routes\" *ngIf=\"loggedIn\">\n        <button routerLink=\"/set-up\" mat-raised-button color=\"primary\">Game Set Up</button>\n\n        <button mat-raised-button [matMenuTriggerFor]=\"menu\" id=\"message\">\n          <img id=\"avatar\" [src]=\"userAvatarURL ? userAvatarURL : defaultAvatarURL\"/>\n          {{ firstName }}\n          <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n        \n        <mat-menu #menu=\"matMenu\" class=\"mat-toolbar mat-warn\">\n          <button mat-menu-item routerLink=\"/userStats\">\n            Profile\n            <mat-icon>person</mat-icon>\n          </button>\n          <button mat-menu-item (click)=\"logout()\">\n            Logout\n            <mat-icon>exit_to_app</mat-icon>\n          </button>\n        </mat-menu>\n      </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SetupComponent } from './setup/setup.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\n\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from 'src/environments/environment';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { SameAmountValidatortDirective } from './setup/same-amount.directive';\nimport { PlayerDialogComponent } from './setup/player-dialog/player-dialog.component';\nimport { GameInterfaceComponent } from './game-interface/game-interface.component';\nimport { UserStatsComponent } from './user-stats/user-stats.component';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSliderModule } from '@angular/material/slider';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SetupComponent,\n    LoginComponent,\n    SameAmountValidatortDirective,\n    PlayerDialogComponent,\n    GameInterfaceComponent,\n    UserStatsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatListModule,\n    MatDividerModule,\n    MatSnackBarModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatExpansionModule,\n    HttpClientModule,\n    MatMenuModule,\n    MatIconModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    FontAwesomeModule,\n    MatToolbarModule,\n\tMatSliderModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { SendDataService } from '../services/send-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Result } from '../interfaces/result';\nimport { Data } from '../interfaces/data';\nimport { User } from '../interfaces/user';\nimport { CategoryAnswer } from '../interfaces/categoryAnswer'\nimport { TriviaService } from '../services/trivia.service';\n\n@Component({\n\tselector: 'app-game-interface',\n\ttemplateUrl: './game-interface.component.html',\n\tstyleUrls: ['./game-interface.component.scss']\n})\nexport class GameInterfaceComponent implements OnInit {\n\tdelayTime: number = 2000\n\tselectable: boolean = true\n\tdefaultAvatarURL: string = 'https://i0.wp.com/www.mvhsoracle.com/wp-content/uploads/2018/08/default-avatar.jpg?ssl=1'\n\t\n\tcurrentQuestions = {\n\t\t\"question\": \"\",\n\t\t\"answers\": []\n\t}\n\tusers: User[] = []\n\tquestions: Result[] = []\n\tscore: number[] = []\n\twrong: number[] = []\n\tcount: number = 0\n\n\tconstructor(\n\t\tprivate triviaService: TriviaService,\n\t\tprivate sendDataService: SendDataService,\n\t\tprivate router: Router\n\t){ }\n\tngOnInit(): void {\n\t\tthis.updateData()\n\t\tthis.changeQuestion()\n\t}\n\tisWinning(userIndex) {\n\t\tlet winning = \"L\"\n\t\tlet highestScore = 0\n\t\tthis.score.forEach((v, i) => {\n\t\t\tif (userIndex !== i && v > highestScore) {\n\t\t\t\thighestScore = v\n\t\t\t}\n\t\t})\n\t\tif (this.score[userIndex] > highestScore && this.score[userIndex] > 0) {\n\t\t\twinning = \"W\"\n\t\t}\n\t\telse if (this.score[userIndex] >= highestScore) {\n\t\t\twinning = \"T\"\n\t\t}\n\t\treturn winning\n\t}\n\tfinalWinner() {\n\t\tlet winners = []\n\t\tlet highestScore = 0\n\t\tthis.score.forEach((v, i) => {\n\t\t\tif (v > highestScore && v > 0) {\n\t\t\t\twinners = [this.users[i]['displayName'] ? this.users[i]['displayName'] : this.users[i]['uid']]\n\t\t\t\thighestScore = v\n\t\t\t}\n\t\t\telse if (v >= highestScore && highestScore > 0) {\n\t\t\t\twinners.push(this.users[i]['displayName'] ? this.users[i]['displayName'] : this.users[i]['uid'])\n\t\t\t\thighestScore = v\n\t\t\t}\n\t\t})\n\t\treturn `${winners.length > 1 ? 'Winners' : 'Winner'}: ${winners.length > 0 ? winners.toString() : 'NO ONE'}`\n\t}\n\tupdateData() {\n\t\tlet dataObject: Data = this.sendDataService.getGameData()\n\t\tthis.questions = dataObject[\"questions\"]\n\t\tthis.users = dataObject[\"users\"]\n\t\tthis.users.forEach((v) => {\n\t\t\tif (typeof v !== 'object') {\n\t\t\t\tthis.users = []\n\t\t\t\tthis.score = []\n\t\t\t\tthis.wrong = []\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.score.push(0)\n\t\t\t\tthis.wrong.push(0)\n\t\t\t}\n\t\t})\n\t}\n\tchangeQuestion() {\n\t\tif (this.questions.length > 0 && this.users.length > 0) {\n\t\t\tthis.currentQuestions[\"question\"] = this.questions[this.count][\"question\"]\n\t\t\tthis.currentQuestions[\"answers\"] = this.questions[this.count][\"incorrect_answers\"].concat(this.questions[this.count][\"correct_answer\"])\n\t\t\tif (this.currentQuestions[\"answers\"].length > 2) {\n\t\t\t\t// Randomize the questions\n\t\t\t\tfor (let i = this.currentQuestions[\"answers\"].length - 1; i > 0; i--) {\n\t\t\t\t\tlet j = Math.floor(Math.random() * (i + 1))\n\t\t\t\t\tlet temp = this.currentQuestions[\"answers\"][i]\n\t\t\t\t\tthis.currentQuestions[\"answers\"][i] = this.currentQuestions[\"answers\"][j]\n\t\t\t\t\tthis.currentQuestions[\"answers\"][j] = temp\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.currentQuestions[\"answers\"][0] === \"False\") {\n\t\t\t\t// Make \"True\" always be on top.\n\t\t\t\tlet temp = this.currentQuestions[\"answers\"][0]\n\t\t\t\tthis.currentQuestions[\"answers\"][0] = this.currentQuestions[\"answers\"][1]\n\t\t\t\tthis.currentQuestions[\"answers\"][1] = temp\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.updateData()\n\t\t\tif (this.questions.length > 0 && this.users.length > 0) {\n\t\t\t\tthis.changeQuestion()\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.router.navigate(['/set-up'])\n\t\t\t}\n\t\t}\n\t}\n\tselectAnswer(answerId) {\n\t\tif (this.count >= this.questions.length) return\n\t\tthis.selectable = false\n\t\tlet correctId = \"\"\n\t\tthis.currentQuestions[\"answers\"].forEach((v, i) => {\n\t\t\tif (v === this.questions[this.count][\"correct_answer\"]) {\n\t\t\t\tcorrectId = \"answer\" + i\n\t\t\t}\n\t\t})\n\t\tdocument.getElementById(correctId) ? document.getElementById(correctId).classList.add(\"correct\") : ''\n\t\tlet correctCategory: number = -1\n\t\tthis.users[this.count % this.users.length]['categoryAnswers'].forEach((v, i) => {\n\t\t\tif (v[\"category\"] === this.questions[this.count][\"category\"] && correctCategory === -1) {\n\t\t\t\tcorrectCategory = i\n\t\t\t}\n\t\t})\n\t\tif (this.currentQuestions[\"answers\"][answerId] !== this.questions[this.count][\"correct_answer\"]) {\n\t\t\tthis.wrong[this.count % this.users.length]++\n\t\t\tdocument.getElementById('answer' + answerId) ? document.getElementById('answer' + answerId).classList.add(\"incorrect\") : ''\n\t\t\tif (correctCategory > -1) {\n\t\t\t\tthis.users[this.count % this.users.length]['categoryAnswers'][correctCategory][\"answeredIncorrectly\"]++\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.score[this.count % this.users.length]++\n\t\t\tif (correctCategory > -1) {\n\t\t\t\tthis.users[this.count % this.users.length]['categoryAnswers'][correctCategory][\"answeredCorrectly\"]++\n\t\t\t}\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tdocument.getElementById(correctId) ? document.getElementById(correctId).classList.remove(\"correct\") : ''\n\t\t\tdocument.getElementById('answer' + answerId) ? document.getElementById('answer' + answerId).classList.remove(\"incorrect\") : ''\n\t\t\tif (++this.count < this.questions.length) {\n\t\t\t\tthis.changeQuestion()\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.currentQuestions[\"question\"] = \"\"\n\t\t\t\tthis.currentQuestions[\"answers\"] = []\n\t\t\t\t//End of the game. Scores all in\n\t\t\t\t//console.log(this.score)\n\t\t\t\tthis.users.forEach((v, i) => {\n\t\t\t\t\tif (this.isWinning(i) === \"W\" && this.users.length > 1) {\n\t\t\t\t\t\tthis.users[i]['totalGamesWon']++\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.isWinning(i) === \"L\" && this.users.length > 1) {\n\t\t\t\t\t\tthis.users[i]['totalGamesLost']++\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.isWinning(i) === \"T\" && this.users.length > 1 && this.score[i] > 0) {\n\t\t\t\t\t\tthis.users[i]['totalGamesWon']++\n\t\t\t\t\t}\n\t\t\t\t\tthis.users[i]['totalQuestionsAnswered'] += (this.questions.length / this.users.length)\n\t\t\t\t\tthis.users[i]['totalQuestionsAnsweredCorrectly'] += this.score[i]\n\t\t\t\t\tthis.users[i]['totalQuestionsAnsweredIncorrectly'] += this.wrong[i]\n\t\t\t\t\tthis.users[i]['totalGamesPlayed']++\n\t\t\t\t})\n\t\t\t\tthis.triviaService.updateUserStats(this.users)\n\t\t\t}\n\t\t\tthis.selectable = true\n\t\t}, this.delayTime)\n\n\t}\n\n}\n","<mat-card [ngClass]=\"{'game-main-card': true, 'hide': count >= questions.length}\">\n\t<mat-card [ngClass]=\"{'user-card': true, 'hide': users.length <= 1}\">\n\t\t<mat-card-header>\n\t\t\t<mat-card-title>\n\t\t\t\t<img [src]=\"users.length > 0 ? (users[(count) % users.length]['photoURL'] ? users[(count) % users.length]['photoURL'] : defaultAvatarURL) : ''\">\n\t\t\t\t<span [innerHTML]=\"users.length > 0 ? (users[(count) % users.length]['displayName'] ? users[(count) % users.length]['displayName'] : users[(count) % users.length]['uid']) : ''\"></span>\n\t\t\t</mat-card-title>\n\t\t</mat-card-header>\n\t</mat-card>\n\t<mat-card class=\"game-title-card\">\n\t\t<mat-card-header>\n\t\t\t<mat-card-title>\n\t\t\t\t<span [innerHTML]=\"currentQuestions['question']\"></span>\n\t\t\t</mat-card-title>\n\t\t</mat-card-header>\n\t</mat-card>\n\t<mat-card-actions>\n\t\t<button mat-button [disabled]=\"!selectable\" *ngFor=\"let answer of currentQuestions['answers']; let i = index\"\n\t\t(click)=\"selectAnswer(i)\" [id]=\"'answer' + i\">\n\t\t\t<span [innerHTML]=\"answer\"></span>\n\t\t</button>\n\t</mat-card-actions>\n</mat-card>\n<mat-card class=\"progress-card\">\n\t<mat-card-title class=\"progress-title\">{{ count }}/{{ questions.length }} Questions</mat-card-title>\n\t<mat-slider min=\"0\" max=\"{{questions.length}}\" step=\"1\" value=\"{{count}}\" [disabled]=\"true\"></mat-slider>\n\t<mat-card [ngClass]=\"{'finalMessage': true, 'hide': count < questions.length || users.length <= 1}\">\n\t\t<mat-card-title>{{ finalWinner() }}</mat-card-title>\n\t</mat-card>\n\t<mat-card class=\"user-progress-card\" *ngFor=\"let user of users; let i = index\">\n\t\t<mat-card-title class=\"user-progress-title\">\n\t\t\t{{ user['displayName'] ? user['displayName'] : user['uid'] }}\n\t\t\t<span [className]=\"users.length > 1 ? (isWinning(i) === 'W' ? 'winning' : isWinning(i) === 'L' ? 'losing' : 'tie') : 'hide'\" [innerHTML]=\"isWinning(i) === 'W' ? 'WINNING' : isWinning(i) === 'L' ? 'LOSING' : 'TIED'\"></span>\n\t\t\t<span class=\"info\">{{score[i]}} CORRECT | {{wrong[i]}} WRONG</span>\n\t\t</mat-card-title>\n\t\t<mat-slider class=\"correct-slider\" min=\"0\" max=\"{{questions.length/users.length}}\" step=\"1\" value=\"{{score[i]}}\" [disabled]=\"true\"></mat-slider>\n\t\t<mat-slider class=\"incorrect-slider\" min=\"0\" max=\"{{questions.length/users.length}}\" step=\"1\" value=\"{{wrong[i]}}\" [disabled]=\"true\"></mat-slider>\n\t</mat-card>\n\t<mat-card-actions [ngClass]=\"{'resultButtons': true, 'hide': count < questions.length}\">\n\t\t<button mat-button routerLink=\"/set-up\">Play Again</button>\n\t\t<button mat-button routerLink=\"/userStats\">Open Stats</button>\n\t</mat-card-actions>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons/faGoogle';\nimport { faFacebook } from '@fortawesome/free-brands-svg-icons/faFacebook';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormControl, AbstractControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  google = faGoogle;\n  facebook = faFacebook;\n\n  signinForm: FormGroup;\n  signupForm: FormGroup;\n\n  signinError: string;\n  signupError: string;\n\n  signinSubmit: boolean = false;\n  signupSubmit: boolean = false;\n\n  isSignIn: boolean = true;\n  isSignUp: boolean = false;\n\n  emailRegex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.signinForm = this.fb.group({\n      signinEmail: new FormControl('', [\n        Validators.required,\n        Validators.pattern(this.emailRegex)\n      ]),\n      signinPassword: new FormControl('', [Validators.required])\n    });\n\n    this.signupForm = this.fb.group({\n      signupEmail: new FormControl('', [\n        Validators.required,\n        Validators.pattern(this.emailRegex)\n      ]),\n      signupPassword: new FormControl('', [Validators.required])\n    });\n\n    this.authService.signinErrorChange.subscribe(error => {\n      this.signinError = error;\n    });\n\n    this.authService.signupErrorChange.subscribe(error => {\n      this.signupError = error;\n    });\n\n    this.authService.loggedInChange.subscribe(bool => {\n      if (bool) {\n        this.router.navigate(['set-up']);\n      }\n    });\n  }\n\n  signInWithGoogle(): void {\n    this.authService.loginWithGoogle();\n  }\n\n  signInWithFacebook(): void {\n    this.authService.loginWithFacebook();\n  }\n\n  signup(): void {\n    if (this.signupForm.valid) {\n      this.authService.signup(this.signupForm.value.signupEmail, this.signupForm.value.signupPassword);\n    }\n\n    this.signupSubmit = true;\n  }\n\n  signin(): void {\n    if (this.signinForm.valid) {\n      this.authService.signin(this.signinForm.value.signinEmail, this.signinForm.value.signinPassword);\n    }\n\n    this.signinSubmit = true;\n  }\n\n  resetSigninError(): void {\n    this.signinError = '';\n  }\n\n  resetSignupError(): void {\n    this.signupError = '';\n  }\n\n  signInOrSignUp(indicator?: boolean) {\n    this.isSignIn = !this.isSignIn;\n    this.isSignUp = !this.isSignUp;\n\n    const signInList = document.getElementById('sign-in').classList;\n    const signUpList = document.getElementById('sign-up').classList;\n\n    if (indicator) {\n      signInList.add('active');\n      signUpList.remove('active');\n    } else {\n      signUpList.add('active');\n      signInList.remove('active');\n    }\n  }\n\n  get signinEmail(): AbstractControl { return this.signinForm.get('signinEmail'); }\n\n  get signinPassword(): AbstractControl { return this.signinForm.get('signinPassword'); }\n\n  get signupEmail(): AbstractControl { return this.signupForm.get('signupEmail'); }\n\n  get signupPassword(): AbstractControl { return this.signupForm.get('signupPassword'); }\n}\n","<div id=\"sign-in-container\">\n  <div>\n    <button id=\"sign-in\" mat-stroked-button class=\"active\" (click)=\"signInOrSignUp(true)\">Sign In</button>\n    <button id=\"sign-up\" mat-stroked-button (click)=\"signInOrSignUp()\">Sign Up</button>\n  </div>\n\n  <mat-card id=\"sign-in-card\" *ngIf=\"isSignIn\">\n    <mat-card-title>Sign In</mat-card-title>\n    <mat-card-subtitle>To Start Playing</mat-card-subtitle>\n    <mat-card-content id=\"sign-in-content\">\n      <form [formGroup]=\"signinForm\">\n        <mat-form-field>\n          <mat-label>Enter your Email</mat-label>\n          <input matInput placeholder=\"email\" formControlName=\"signinEmail\" (ngModelChange)=\"resetSigninError()\"\n            required>\n        </mat-form-field>\n\n        <div *ngIf=\"signinEmail.invalid && (signinEmail.dirty || signinEmail.touched || signinSubmit)\">\n          <mat-error *ngIf=\"signinEmail.errors.required\">\n            Email is required\n          </mat-error>\n\n          <mat-error *ngIf=\"signinEmail.errors.pattern\">\n            Email is invalid\n          </mat-error>\n        </div>\n\n        <mat-form-field>\n          <mat-label>Enter your Password</mat-label>\n          <input type=\"password\" matInput placeholder=\"password\" formControlName=\"signinPassword\"\n            (ngModelChange)=\"resetSigninError()\" required>\n        </mat-form-field>\n\n        <mat-error\n          *ngIf=\"signinPassword.errors?.required && (signinPassword.dirty || signinPassword.touched || signinSubmit)\">\n          Password is required\n        </mat-error>\n\n        <mat-error *ngIf=\"signinError && signinForm.valid\">\n          {{ signinError }}\n        </mat-error>\n\n        <div>\n          <button mat-raised-button class=\"mat-warn\" (click)=\"signin()\">Sign In</button>\n        </div>\n      </form>\n\n      <div>OR</div>\n\n      <button id='google' mat-raised-button (click)='signInWithGoogle()'>\n        <fa-icon [icon]='google'></fa-icon>\n        <span>Continue with Google</span>\n      </button>\n\n      <button id='facebook' mat-raised-button (click)='signInWithFacebook()'>\n        <fa-icon [icon]='facebook'></fa-icon>\n        <span>Continue with Facebook</span>\n      </button>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card id=\"sign-up-card\" *ngIf=\"isSignUp\">\n    <mat-card-title>Sign Up</mat-card-title>\n    <mat-card-content id=\"sign-up-content\">\n      <form [formGroup]=\"signupForm\">\n        <mat-form-field>\n          <mat-label>Email</mat-label>\n          <input matInput placeholder=\"Ex. example@gmail.com\" formControlName=\"signupEmail\"\n            (ngModelChange)=\"resetSignupError()\" required>\n        </mat-form-field>\n\n        <div *ngIf=\"signupEmail.invalid && (signupEmail.dirty || signupEmail.touched || signupSubmit)\">\n          <mat-error *ngIf=\"signupEmail.errors.required\">\n            Email is required\n          </mat-error>\n\n          <mat-error *ngIf=\"signupEmail.errors.pattern\">\n            Email is invalid\n          </mat-error>\n        </div>\n\n        <mat-form-field>\n          <mat-label>Password</mat-label>\n          <input type=\"password\" matInput placeholder=\"Ex. password#@12\" formControlName=\"signupPassword\"\n            (ngModelChange)=\"resetSignupError()\" required>\n        </mat-form-field>\n\n        <mat-error\n          *ngIf=\"signupPassword.errors?.required && (signupPassword.dirty || signupPassword.touched || signupSubmit)\">\n          Password is required\n        </mat-error>\n\n        <mat-error *ngIf=\"signupError && signupForm.valid\">\n          {{ signupError }}\n        </mat-error>\n\n        <div>\n          <button mat-raised-button class=\"mat-warn\" (click)=\"signup()\">Create Account</button>\n        </div>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>","import { Injectable } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase/app';\n\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { User } from '../interfaces/user';\nimport { Subject, BehaviorSubject } from 'rxjs';\n\nimport { TriviaService } from './trivia.service';\nimport { CategoryAnswer } from '../interfaces/categoryAnswer';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  user: User;\n\n  loggedInChange: Subject<boolean> = new Subject<boolean>();\n  firstNameChange: Subject<string> = new Subject<string>();\n  signinErrorChange: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  signupErrorChange: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  userIdChange: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  constructor(\n    private af: AngularFirestore,\n    private afa: AngularFireAuth,\n    private router: Router,\n    private triviaService: TriviaService\n  ) {\n    this.afa.authState.subscribe(user => {\n      if (user) {\n        this.user = user.providerData[0];\n        let displayName = this.user.displayName;\n        const email = this.user.email;\n\n        if (displayName) {\n          displayName = displayName.replace(/\\s.+/, '');\n        } else {\n          displayName = email.replace(/@.+/, '');\n        }\n\n        this.userIdChange.next(this.user.uid);\n        this.loggedInChange.next(true);\n        this.firstNameChange.next(displayName);\n\n        const usersRef = this.af.collection('users').doc(this.user.uid);\n\n        usersRef.update({...this.user}).catch(_ => {\n          this.triviaService.getCategoriesObservable().subscribe(categories => {\n            const categoryAnswers: CategoryAnswer[] = [];\n\n            for (let categoryObj of categories) {\n              categoryAnswers.push({\n                answeredCorrectly: 0,\n                answeredIncorrectly: 0,\n                category: categoryObj.name\n              });\n            }\n\n            this.af.collection('users').doc(this.user.uid).set({\n              ...this.user,\n              totalGamesPlayed: 0,\n              totalGamesWon: 0,\n              totalGamesLost: 0,\n              totalQuestionsAnswered: 0,\n              totalQuestionsAnsweredIncorrectly: 0,\n              totalQuestionsAnsweredCorrectly: 0,\n              categoryAnswers\n            });\n          });\n        });\n      }\n    });\n  }\n\n  async loginWithGoogle() {\n    await this.afa.signInWithPopup(new auth.GoogleAuthProvider());\n    this.router.navigate(['set-up']);\n  }\n\n  async loginWithFacebook() {\n    await this.afa.signInWithPopup(new auth.FacebookAuthProvider());\n    this.router.navigate(['set-up']);\n  }\n\n  async logout() {\n    this.loggedInChange.next(false);\n    await this.afa.signOut();\n    this.router.navigate(['log-in']);\n  }\n\n  signup(email: string, password: string) {\n    this.afa.createUserWithEmailAndPassword(email, password)\n      .then(_ => {\n        console.log('Successfully created an account');\n      })\n      .catch(e => {\n        console.log('Error with signing up:');\n\n        this.signupErrorChange.next(e.message);\n      });\n  }\n\n  signin(email: string, password: string) {\n    this.afa.signInWithEmailAndPassword(email, password)\n      .then(_ => {\n        console.log(\"Successfully signed in using email and password\");\n      })\n      .catch(e => {\n        console.log('Error with signing in with email and password:');\n        console.log(e.message);\n\n        this.signinErrorChange.next(e.message);\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { Result } from '../interfaces/result';\nimport { Data } from '../interfaces/data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SendDataService {\n  data: Data = {\n    users: [],\n    questions: []\n  };\n\n  constructor() { }\n\n  sendGameData(game: Data) {\n    this.data = game\n  }\n\n  // clearGameData() {\n  //   this.subject.next()\n  // }\n\n  getGameData() {\n    return this.data\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TopLevel } from '../interfaces/toplevel';\nimport { Category } from '../interfaces/category';\nimport { Result } from '../interfaces/result';\nimport { User } from '../interfaces/user';\nimport { AuthService } from './auth.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TriviaService {\n  categoriesUrl: string = 'https://opentdb.com/api_category.php';\n\n  constructor(\n    private http: HttpClient,\n    private af: AngularFirestore\n  ) { }\n\n  getCategoriesObservable(): Observable<Array<Category>> {\n    return this.http.get<TopLevel>(this.categoriesUrl).pipe(\n      map((obj: TopLevel) => {\n        return obj.trivia_categories;\n      })\n    );\n  } \n\n  getQuestionsObservable(\n    amountOfQuestions: number,\n    categoryId: number,\n    difficulty: string,\n    questionType: string\n  ): Observable<Array<Result>> {\n    const a = `amount=${amountOfQuestions}`;\n    const c = categoryId ? `category=${categoryId}` : '';\n    const d = difficulty ? `difficulty=${difficulty}` : '';\n    const qt = questionType ? `type=${questionType}` : '';\n    const url = `https://opentdb.com/api.php?${a}&${c}&${d}&${qt}`.replace(/&+$/, '').replace(/&+/, '&');\n    return this.http.get<TopLevel>(url).pipe(\n      map((obj: TopLevel) => {\n        return obj.results;\n      })\n    )\n  }\n\n  getAllUsersObservable(): Observable<Array<User>> {\n    return this.af.collection<User>('users').valueChanges();\n  }\n\n  getCurrentUserObservable(id: string): Observable<User> {\n    return this.af.collection('users').doc<User>(id).valueChanges();\n  }\n\n  updateUserStats(users: User[]): void {\n    for (let user of users) {\n      this.af.collection('users').doc(user.uid).update({\n        ...user\n      });\n    }\n  }\n}","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { TriviaService } from 'src/app/services/trivia.service';\n\n@Component({\n  selector: 'app-player-dialog',\n  templateUrl: './player-dialog.component.html',\n  styleUrls: ['./player-dialog.component.scss']\n})\nexport class PlayerDialogComponent implements OnInit {\n  players;\n  playersPlaying = [this.data.currentUser];\n  nextPlayer = false;\n  isDisabled = false;\n  chosenPlayers = 1;\n\n  defaultAvatarURL: string = 'https://i0.wp.com/www.mvhsoracle.com/wp-content/uploads/2018/08/default-avatar.jpg?ssl=1';\n\n  constructor(\n    public dialogRef: MatDialogRef<PlayerDialogComponent>,\n    private authService: AuthService,\n    private triviaService: TriviaService,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) { }\n\n  ngOnInit(): void {\n    this.triviaService.getAllUsersObservable()\n      .subscribe(players => {\n        let filtered = players.filter(player => player.uid !== this.data.currentUser.uid)\n\n        this.players = filtered\n      })\n  }\n\n  playerClicked(player, event) {\n\n    if (Number(this.data.amount) <= 2) {\n      this.playersPlaying.push(player)\n      this.dialogRef.close(this.playersPlaying);\n    } else {\n      if (event.target.tagName === 'MAT-CARD') {\n        // make players already chosen disabled\n        event.target.classList.add('disabled')\n      }\n      else {\n        event.target.parentNode.classList.add('disabled')\n      }\n        this.nextPlayer = true\n        this.playersPlaying.push(player)\n        this.chosenPlayers++\n        if (this.chosenPlayers === Number(this.data.amount)) {\n          this.dialogRef.close(this.playersPlaying)\n        }\n    }\n  }\n\n  onCancel() {\n    this.dialogRef.close(\"canceled\")\n  }\n\n  getDefaultUsername(email: string): string {\n    return email.replace(/@.+/, '');\n  }\n}\n","<h1 matDialogTitle>Choose Who's Playing</h1>\n<mat-card-subtitle *ngIf=\"nextPlayer\">Choose player {{data.amount}}</mat-card-subtitle>\n\n<mat-dialog-content>\n    <mat-card (click)=\"playerClicked(player, $event)\" *ngFor=\"let player of players\" >\n        <img mat-card-avatar [src]=\"player.photoURL ? player.photoURL : defaultAvatarURL\">\n        <mat-card-title>{{ player.displayName ? player.displayName : getDefaultUsername(player.email) }}</mat-card-title>\n    </mat-card>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button mat-raised-button (click)=\"onCancel()\" color=\"primary\">Cancel</button>\n</mat-dialog-actions>","import { Directive } from '@angular/core';\nimport { ValidatorFn, FormGroup, ValidationErrors, NG_VALIDATORS, Validator, AbstractControl, FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\nexport const sameAmountValidator: ValidatorFn = (control: FormGroup): ValidationErrors |\nnull => {\n  const amount = control.get('amount');\n  const questionNum = control.get('questionNum');\n\n  return amount && questionNum && questionNum.value % Number(amount.value) !== 0 ? {'notDivisibleByPlayers': true} :\n  null;\n}\n\n@Directive({\n  selector: '[appSameAmount]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: SameAmountValidatortDirective,\n  multi: true}]\n})\nexport class SameAmountValidatortDirective implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return (control && control.invalid);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TriviaService } from '../services/trivia.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { Category } from '../interfaces/category';\nimport { sameAmountValidator } from './same-amount.directive';\nimport { SendDataService } from '../services/send-data.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PlayerDialogComponent } from './player-dialog/player-dialog.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Result } from '../interfaces/result';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from '../services/auth.service';\nimport { Data } from '../interfaces/data';\nimport { User } from '../interfaces/user';\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.scss']\n})\nexport class SetupComponent implements OnInit {\n  categories: Category[];\n  currentUser: User;\n  data: Data = {\n    questions: [],\n    users: []\n    }\n\n\n\n  categoriesSubscription: Subscription;\n\n  game = { amount: 1, questionNum: 10, category: \"any\", difficulty: \"any\", type: \"any\" };\n  playerAmount = [1, 2, 3];\n\n  setUpForm: FormGroup;\n  selected = 'any';\n\n  constructor(\n    private triviaService: TriviaService,\n    private authService: AuthService,\n    private sendDataService: SendDataService,\n    private route: ActivatedRoute,\n    public dialog: MatDialog,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.getCurrentUser()\n    this.categories = this.route.snapshot.data.categories\n    this.setUpForm = new FormGroup({\n      'amount': new FormControl(this.game.amount),\n      'questionNum': new FormControl(this.game.questionNum, [\n        Validators.required,\n        Validators.max(50),\n        Validators.min(1),\n        sameAmountValidator\n      ]),\n      'category': new FormControl(this.game.category),\n      'difficulty': new FormControl(this.game.difficulty),\n      'type': new FormControl(this.game.type)\n    }, { validators: sameAmountValidator })\n\n    this.getCategories()\n  }\n\n  ngOnDestroy() {\n    this.categoriesSubscription.unsubscribe();\n  }\n\n  get questionNum() { return this.setUpForm.get('questionNum') }\n\n  getCategories() {\n    this.categoriesSubscription = this.triviaService.getCategoriesObservable()\n      .subscribe(categories => this.categories = categories);\n  }\n\n  chooseUser() {\n    this.data.users = []\n    if (Number(this.setUpForm.value.amount) > 1) {\n      const dialogRef = this.dialog.open(PlayerDialogComponent, {\n        width: '1000px',\n        disableClose: true,\n        data: { amount: this.setUpForm.value.amount, currentUser: this.currentUser }\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        if (result === \"canceled\") {\n          this.setUpForm.get('amount').setValue(1)\n        }\n        else {\n          this.data.users = result\n        }\n      });\n    }\n  }\n\n  getCurrentUser() {\n    this.authService.userIdChange.subscribe(id => {\n      if(id !== '') {\n      this.triviaService.getCurrentUserObservable(id).subscribe(user => this.currentUser = user)\n      }\n    })\n  }\n\n  sendData(data) {\n    this.sendDataService.sendGameData(data);\n  }\n\n  submitForm() {\n    let category = this.setUpForm.value.category;\n    let difficulty = this.setUpForm.value.difficulty;\n    let type = this.setUpForm.value.type;\n\n    this.triviaService.getQuestionsObservable(\n      this.setUpForm.value.questionNum,\n      category === \"any\" ? null : category,\n      difficulty === \"any\" ? null : difficulty,\n      type === \"any\" ? null : type\n    ).subscribe(questions => {\n      this.data.questions = questions\n      if (this.data.questions.length !== 0) {\n        if(Number(this.setUpForm.value.amount) === 1){\n          this.data.users = [this.currentUser]\n        }\n        this.router.navigate(['/game'])\n        this.sendData(this.data)\n      }\n      else {\n        this.snackBar.open(\"OOPS! There doesn't seem to be any questions matching your set up!\", \"Close\", {\n          duration: 2000,\n          panelClass: ['mat-toolbar', 'mat-warn']\n        })\n      }\n    });\n\n  }\n\n}\n","<mat-card *ngIf=\"categories\" id=\"game-set-up\">\n    <mat-card-title>Game Set Up</mat-card-title>\n    <mat-card-content>\n        <form (ngSubmit)=\"submitForm()\" [formGroup]=\"setUpForm\"> \n            <mat-form-field>\n                <mat-label>Amount of Players:</mat-label>\n                <select matNativeControl formControlName=\"amount\" (change)=\"chooseUser()\">\n                    <option [value]=player  *ngFor=\"let player of playerAmount\">{{player}}</option>\n                </select>\n                \n            </mat-form-field>\n\n            <mat-form-field>\n                <!-- make sure it will divide correct between players -->\n                <mat-label>Number of Questions:</mat-label>\n                <input \n                  matInput \n                  type=\"number\"\n                  required \n                  max=\"50\"\n                  min=\"1\"\n                  id=\"questionNum\" \n                  formControlName=\"questionNum\"\n                >\n            </mat-form-field>\n                <div *ngIf=\"questionNum.invalid && (questionNum.dirty || questionNum.touched)\">\n                    <mat-error *ngIf=\"questionNum.errors.max\">\n                        50 is the maximum amount\n                    </mat-error>\n                    <mat-error *ngIf=\"questionNum.errors.min\">\n                        Need at least one question to play\n                    </mat-error>\n                    <mat-error *ngIf=\"questionNum.errors.required\">\n                        Number is required\n                    </mat-error>\n                </div>\n                <mat-error *ngIf=\"setUpForm.errors?.notDivisibleByPlayers && setUpForm.invalid\">\n                    Please enter an amount so each player can have the same amount of questions\n                </mat-error>\n            \n            <mat-form-field>\n                <mat-label>Select Category:</mat-label>\n                <mat-select [(value)]=\"selected\" formControlName=\"category\">\n                    <mat-option value=\"any\">Any Category</mat-option>\n                    <mat-option *ngFor=\"let category of categories\" [value]=\"category.id\">\n                      {{category.name}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Select Difficulty:</mat-label>\n                <select matNativeControl formControlName=\"difficulty\">\n                    <option value=\"any\">Any Difficulty</option>\n                    <option value=\"easy\">Easy</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"hard\">Hard</option>\n                </select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Select Type:</mat-label>\n                <select matNativeControl formControlName=\"type\">\n                    <option value=\"any\">Any Type</option>\n                    <option value=\"boolean\">True or False</option>\n                    <option value=\"multiple\">Mutiple Choice</option>\n                </select>\n            </mat-form-field>\n            <div id=\"button-container\">\n              <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"setUpForm.invalid\">Let's Play!</button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n\n<div id=\"spinner\">\n  <mat-spinner *ngIf=\"!categories\"></mat-spinner>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable, Subscription } from 'rxjs';\nimport { User } from '../interfaces/user';\nimport { TriviaService } from '../services/trivia.service';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-user-stats',\n  templateUrl: './user-stats.component.html',\n  styleUrls: ['./user-stats.component.scss']\n})\nexport class UserStatsComponent implements OnInit {\n  player: User;\n\n  worstCategories: string[] = [\"No data yet. Go play some games!\"];\n  bestCategories: string[]  = [\"No data yet. Go play some games!\"];\n\n  currentUserSubscription: Subscription;\n\n  defaultAvatarURL: string = 'https://i0.wp.com/www.mvhsoracle.com/wp-content/uploads/2018/08/default-avatar.jpg?ssl=1';\n  avatar: string;\n\n  constructor(\n    private triviaService: TriviaService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.userIdChange.subscribe(id => {\n      if (id !== '') {\n        this.currentUserSubscription = this.triviaService.getCurrentUserObservable(id).subscribe(user => {\n          let cH = 0;\n          let cL = 1;\n          let cHR: string[] = [];\n          let cLR: string[] = [];\n\n          for (let cA of user.categoryAnswers) {\n            if (cA.answeredCorrectly !== 0 && cA.answeredIncorrectly !== 0) {\n              const ratio: number = Number((cA.answeredCorrectly / (cA.answeredCorrectly + cA.answeredIncorrectly)).toFixed(1));\n\n              if (cH === ratio) {\n                cHR.push(cA.category);\n              } else if (cH < ratio) {\n                cH = ratio;\n                cHR = [cA.category];\n              }\n\n              if (cL === ratio) {\n                cLR.push(cA.category);\n              } else if (cL > ratio) {\n                cL = ratio;\n                cLR = [cA.category];\n              }\n            }\n          }\n\n          if (cHR.join() === cLR.join() && (cHR.length > 0 && cLR.length > 0)) {\n            this.bestCategories = cHR;\n          } else {\n            if (cHR.length > 0) {\n              this.bestCategories = cHR;\n            }\n  \n            if (cLR.length > 0) {\n              this.worstCategories = cLR;\n            }\n          }\n\n          if(user.photoURL) {\n            if (/facebook/.test(user.photoURL)) {\n              this.avatar = user.photoURL + \"?type=large\"\n            } else {\n              this.avatar = user.photoURL;\n            }\n          } else {\n            this.avatar = this.defaultAvatarURL\n          }\n\n          this.player = user;\n          \n        });\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.currentUserSubscription.unsubscribe();\n  }\n\n  getDefaultUsername(email: string): string {\n    return email.replace(/@.+/, '');\n  }\n}\n","<div>\n  <mat-card *ngIf=\"player\" class=\"mat-toolbar mat-warn\" id=\"user\">\n    <mat-card-title *ngIf=\"player.email || player.displayName\">{{ player.displayName ? player.displayName : getDefaultUsername(player.email) }}</mat-card-title>\n  \n    <mat-card-content class=\"main\">\n      <img [src]=\"avatar\">\n      <mat-list>\n        <mat-list-item *ngIf=\"player.email\">\n          <mat-card-subtitle>\n          {{ player.email }}\n        </mat-card-subtitle>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"player.phoneNumber\">\n          <mat-card-subtitle>{{ player.phoneNumber }}</mat-card-subtitle>\n        </mat-list-item>\n      </mat-list>\n    </mat-card-content>\n  </mat-card>\n  \n  <mat-card *ngIf=\"player\">\n    <mat-card-title>Game Stats</mat-card-title>\n    <mat-card-content>\n     <div class=\"statRow\">\n        <p colspan=\"2\">Total Games Played:</p>\n        <p>{{ player.totalGamesPlayed }}</p>\n      </div>\n      <div class=\"statRow\">\n        <p colspan=\"2\">Games Won:</p>\n        <p>{{ player.totalGamesWon }}</p>\n      </div>\n      <div class=\"statRow\">\n        <p colspan=\"2\">Games Lost:</p>\n        <p>{{ player.totalGamesLost }}</p>\n      </div>\n      <div class=\"statRow\">\n        <p colspan=\"2\">Questions Answered:</p>\n        <p>{{ player.totalQuestionsAnswered }}</p>\n      </div>\n      <div class=\"statRow\">\n        <p colspan=\"2\">Answered Correctly:</p>\n        <p>{{ player.totalQuestionsAnsweredCorrectly }}</p>\n      </div>\n      <div class=\"statRow\">\n        <p colspan=\"2\">Answered Incorrectly:</p>\n        <p>{{ player.totalQuestionsAnsweredIncorrectly }}</p>\n      </div>\n\n      <mat-expansion-panel class=\"mat-toolbar mat-accent\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>Best Category(s):</mat-panel-title>\n        </mat-expansion-panel-header>\n        <ul>\n          <li *ngFor=\"let category of bestCategories\">{{ category }}</li>\n        </ul>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel class=\"mat-toolbar mat-warn\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>Worst Category(s):</mat-panel-title>\n        </mat-expansion-panel-header>\n        <ul>\n          <li *ngFor=\"let category of worstCategories\">{{ category }}</li>\n        </ul>\n      </mat-expansion-panel>\n \n      <!-- <mat-list>\n        <mat-list-item>Best Category(s):</mat-list-item>\n        <mat-list-item *ngFor=\"let category of bestCategories; let i = index\">\n          <mat-card-subtitle>{{ i + 1 }}. {{ category }}</mat-card-subtitle>\n        </mat-list-item>\n        <mat-list-item>Worst Category(s):</mat-list-item>\n        <mat-list-item *ngFor=\"let category of worstCategories; let i = index\">\n          <mat-card-subtitle>{{ i + 1 }}. {{ category }}</mat-card-subtitle>\n        </mat-list-item>\n      </mat-list> -->\n    </mat-card-content>\n  </mat-card>\n</div>\n\n<div id=\"spinner\">\n  <mat-spinner *ngIf=\"!player\"></mat-spinner>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyAayqPi75_IIAt0TeYOF1s6WDjQXsm_u6U',\n    authDomain: 'trivia-43e20.firebaseapp.com',\n    databaseURL: 'https://trivia-43e20.firebaseio.com',\n    projectId: 'trivia-43e20',\n    storageBucket: 'trivia-43e20.appspot.com',\n    messagingSenderId: '766024110773',\n    appId: '1:766024110773:web:3b5439860006b47a3424fc'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}