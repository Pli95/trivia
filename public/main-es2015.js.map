{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/game-interface/game-interface.component.ts","./src/app/game-interface/game-interface.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/auth.service.ts","./src/app/services/send-data.service.ts","./src/app/services/trivia.service.ts","./src/app/setup/same-amount.directive.ts","./src/app/setup/setup.component.ts","./src/app/setup/setup.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SetupComponent } from './setup/setup.component';\nimport { LoginComponent } from './login/login.component';\nimport { GameInterfaceComponent } from './game-interface/game-interface.component'\n\nimport { redirectUnauthorizedTo, canActivate } from '@angular/fire/auth-guard';\n\nconst redirectUnauthorizedToLogin = () => redirectUnauthorizedTo(['log-in']);\n\nconst routes: Routes = [\n  {\n    path: 'set-up',\n    component: SetupComponent,\n    ...canActivate(redirectUnauthorizedToLogin)\n  },\n  { path: 'log-in', component: LoginComponent },\n  {\n    path: 'game',\n    component: GameInterfaceComponent,\n    ...canActivate(redirectUnauthorizedToLogin)\n  },\n  { path: '**', redirectTo: 'log-in' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'trivia';\n}\n","<mat-toolbar color=\"accent\">\n    <mat-toolbar-row>\n\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SetupComponent } from './setup/setup.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\n\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from 'src/environments/environment';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { SameAmountValidatortDirective } from './setup/same-amount.directive';\nimport { GameInterfaceComponent } from './game-interface/game-interface.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SetupComponent,\n    LoginComponent,\n    SameAmountValidatortDirective,\n    GameInterfaceComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    FontAwesomeModule,\n    MatToolbarModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'app-game-interface',\n\ttemplateUrl: './game-interface.component.html',\n\tstyleUrls: ['./game-interface.component.scss']\n})\nexport class GameInterfaceComponent implements OnInit {\n\tanswers: string[] = [\"a\", \"b\", \"c\", \"d\"]\n\tconstructor() { }\n\n\tngOnInit(): void {\n\t}\n\n}\n","<mat-card class=\"example-card\">\n\t<mat-card-header>\n\t\t<mat-card-title>Question</mat-card-title>\n\t</mat-card-header>\n\t<mat-card-actions>\n\t\t<button mat-button *ngFor=\"let answer of answers\" [value]=\"answer\">\n\t\t\t{{ answer }}\n\t\t</button>\n\t</mat-card-actions>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons/faGoogle';\nimport { faFacebook } from '@fortawesome/free-brands-svg-icons/faFacebook';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  google = faGoogle;\n  facebook = faFacebook;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  signInWithGoogle(): void {\n    this.authService.loginWithGoogle();\n  }\n\n  signInWithFacebook(): void {\n    this.authService.loginWithFacebook();\n  }\n}\n","<button\n  id='google'\n  mat-raised-button\n  (click)='signInWithGoogle()'\n>\n  <fa-icon [icon]='google'></fa-icon>\n  <span>Google</span>\n</button>\n\n<button\n  id='facebook'\n  mat-raised-button\n  (click)='signInWithFacebook()'\n>\n  <fa-icon [icon]='facebook'></fa-icon>\n  <span>Facebook</span>\n</button>","import { Injectable } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase/app';\n\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { User } from '../interfaces/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  user: User;\n\n  constructor(\n    private af: AngularFirestore,\n    private afa: AngularFireAuth,\n    private router: Router\n  ) {\n    this.afa.authState.subscribe(user => {\n      if (user) {\n        this.user = user.providerData[0];\n\n        const usersRef = this.af.collection('users').doc(this.user.uid)\n\n        usersRef.update({...this.user}).catch(_ => {\n          usersRef.set({...this.user});\n        });\n      }\n    });\n  }\n\n  async loginWithGoogle() {\n    await this.afa.signInWithPopup(new auth.GoogleAuthProvider());\n    this.router.navigate(['set-up']);\n  }\n\n  async loginWithFacebook() {\n    await this.afa.signInWithPopup(new auth.FacebookAuthProvider());\n    this.router.navigate(['set-up']);\n  }\n\n  async logout(){\n    await this.afa.signOut();\n    this.router.navigate(['log-in']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SendDataService {\n  private subject = new Subject<any>();\n\n  constructor() { }\n\n  sendGameData(game: any[]) {\n    this.subject.next({game})\n  }\n\n  clearGameData() {\n    this.subject.next()\n  }\n\n  getGameData(): Observable<any> {\n    return this.subject.asObservable()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TopLevel } from '../interfaces/toplevel';\nimport { Category } from '../interfaces/category';\nimport { Result } from '../interfaces/result';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TriviaService {\n  categoriesUrl: string = 'https://opentdb.com/api_category.php';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getCategoriesObservable(): Observable<Array<Category>> {\n    return this.http.get<TopLevel>(this.categoriesUrl).pipe(\n      map((obj: TopLevel) => {\n        return obj.trivia_categories;\n      })\n    );\n  }\n\n  getQuestionsObservable(\n    amountOfQuestions: number,\n    categoryId: number,\n    difficulty: string,\n    questionType: string\n  ): Observable<Array<Result>> {\n    const a = amountOfQuestions ? `?amount=${amountOfQuestions}` : '';\n    const c = categoryId ? `?category=${categoryId}` : '';\n    const d = difficulty ? `?difficult=${difficulty}` : '';\n    const qt = questionType ? `?type=${questionType}` : '';\n    const url = `https://opentdb.com/api.php${a}${c}${d}${qt}`;\n    return this.http.get<TopLevel>(url).pipe(\n      map((obj: TopLevel) => {\n        return obj.results;\n      })\n    )\n  }\n}","import { Directive } from '@angular/core';\nimport { ValidatorFn, FormGroup, ValidationErrors, NG_VALIDATORS, Validator, AbstractControl, FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\nexport const sameAmountValidator: ValidatorFn = (control: FormGroup): ValidationErrors |\nnull => {\n  const amount = control.get('amount');\n  const questionNum = control.get('questionNum');\n\n  return amount && questionNum && questionNum.value % Number(amount.value) !== 0 ? {'notDivisibleByPlayers': true} :\n  null;\n}\n\n@Directive({\n  selector: '[appSameAmount]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: SameAmountValidatortDirective,\n  multi: true}]\n})\nexport class SameAmountValidatortDirective implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return (control && control.invalid);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TriviaService } from '../services/trivia.service';\nimport { Observable } from 'rxjs';\nimport { Category } from '../interfaces/category';\nimport { sameAmountValidator } from './same-amount.directive';\nimport { SendDataService } from '../services/send-data.service';\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.scss']\n})\nexport class SetupComponent implements OnInit {\n  categories$: Observable<Category[]>\n\n  game = {amount: 1, questionNum: 10, category:\"any\", difficulty:'any', type: 'any'}\n\n  setUpForm: FormGroup;\n  selected = 'any';\n\n\n  constructor(\n    private triviaService: TriviaService,\n    private sendDataService: SendDataService\n  ) { }\n\n  ngOnInit(): void {\n    this.setUpForm = new FormGroup({\n      'amount': new FormControl(this.game.amount),\n      'questionNum': new FormControl(this.game.questionNum, [\n        Validators.required,\n        Validators.max(50),\n        Validators.min(1),\n        sameAmountValidator\n      ]),\n      'category': new FormControl(this.game.category),\n      'difficulty': new FormControl(this.game.difficulty),\n      'type': new FormControl(this.game.type)\n    }, {validators: sameAmountValidator})\n\n    this.getCategories()\n  }\n\n  get questionNum() {return this.setUpForm.get('questionNum')}\n\n  getCategories() {\n    this.categories$ = this.triviaService.getCategoriesObservable();\n  }\n\n  sendData() {\n    this.sendDataService.sendGameData(this.setUpForm.value)\n  }\n\n  submitForm() {\n    console.log(this.setUpForm.value)\n    this.sendData()\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Game SetUp</mat-card-title>\n    <mat-card-content>\n        <form (ngSubmit)=\"submitForm()\" [formGroup]=\"setUpForm\"> \n            <mat-form-field>\n                <mat-label>Amount of Players:</mat-label>\n                <select matNativeControl formControlName=\"amount\">\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                </select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <!-- make sure it will divide correct between players -->\n                <mat-label>Number of Questions:</mat-label>\n                <input \n                matInput \n                type=\"number\"\n                required \n                max=\"50\"\n                min=\"1\"\n                id=\"questionNum\" \n                formControlName=\"questionNum\"\n                >\n            </mat-form-field>\n                <div *ngIf=\"questionNum.invalid && (questionNum.dirty || questionNum.touched)\">\n                    <mat-error *ngIf=\"questionNum.errors.max\">\n                        50 is the maximum amount\n                    </mat-error>\n                    <mat-error *ngIf=\"questionNum.errors.min\">\n                        Need at least one question to play\n                    </mat-error>\n                    <mat-error *ngIf=\"questionNum.errors.required\">\n                        Number is required\n                    </mat-error>\n                </div>\n                <mat-error *ngIf=\"setUpForm.errors?.notDivisibleByPlayers && setUpForm.invalid\">\n                    Please enter an amount so each player can have the same amount of questions\n                </mat-error>\n            \n            <mat-form-field>\n                <mat-label>Select Category:</mat-label>\n                <mat-select [(value)]=\"selected\" formControlName=\"category\">\n                    <mat-option value=\"any\">Any Category</mat-option>\n                    <mat-option *ngFor=\"let category of categories$ | async\" [value]=\"category.id\">{{category.name}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Select Difficulty:</mat-label>\n                <select matNativeControl formControlName=\"difficulty\">\n                    <option value=\"any\">Any Difficulty</option>\n                    <option value=\"easy\">Easy</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"hard\">Hard</option>\n                </select>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Select Type:</mat-label>\n                <select matNativeControl formControlName=\"type\">\n                    <option value=\"any\">Any Type</option>\n                    <option value=\"true/false\">True or False</option>\n                    <option value=\"boolean\">Mutiple Choice</option>\n                </select>\n            </mat-form-field>\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"setUpForm.invalid\">Let's Play!</button>\n        </form>\n    </mat-card-content>\n</mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyAayqPi75_IIAt0TeYOF1s6WDjQXsm_u6U',\n    authDomain: 'trivia-43e20.firebaseapp.com',\n    databaseURL: 'https://trivia-43e20.firebaseio.com',\n    projectId: 'trivia-43e20',\n    storageBucket: 'trivia-43e20.appspot.com',\n    messagingSenderId: '766024110773',\n    appId: '1:766024110773:web:3b5439860006b47a3424fc'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}