{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/game-interface/game-interface.component.ts","webpack:///src/app/game-interface/game-interface.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/send-data.service.ts","webpack:///src/app/services/trivia.service.ts","webpack:///src/app/setup/same-amount.directive.ts","webpack:///src/app/setup/setup.component.ts","webpack:///src/app/setup/setup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","redirectUnauthorizedToLogin","routes","path","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","GameInterfaceComponent","answers","LoginComponent","authService","google","facebook","loginWithGoogle","loginWithFacebook","signInWithGoogle","signInWithFacebook","AuthService","af","afa","router","authState","subscribe","user","providerData","usersRef","collection","doc","uid","update","_","set","signInWithPopup","GoogleAuthProvider","navigate","FacebookAuthProvider","signOut","providedIn","SendDataService","subject","game","next","asObservable","TriviaService","http","categoriesUrl","get","pipe","obj","trivia_categories","amountOfQuestions","categoryId","difficulty","questionType","a","c","d","qt","url","results","sameAmountValidator","control","amount","questionNum","value","Number","SameAmountValidatortDirective","form","isSubmitted","submitted","invalid","provide","useExisting","multi","SetupComponent","triviaService","sendDataService","category","type","selected","setUpForm","required","max","min","validators","getCategories","categories$","getCategoriesObservable","sendGameData","console","log","sendData","submitForm","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SetupComponent } from './setup/setup.component';\nimport { LoginComponent } from './login/login.component';\nimport { GameInterfaceComponent } from './game-interface/game-interface.component'\n\nimport { redirectUnauthorizedTo, canActivate } from '@angular/fire/auth-guard';\n\nconst redirectUnauthorizedToLogin = () => redirectUnauthorizedTo(['log-in']);\n\nconst routes: Routes = [\n  {\n    path: 'set-up',\n    component: SetupComponent,\n    ...canActivate(redirectUnauthorizedToLogin)\n  },\n  { path: 'log-in', component: LoginComponent },\n  {\n    path: 'game',\n    component: GameInterfaceComponent,\n    ...canActivate(redirectUnauthorizedToLogin)\n  },\n  { path: '**', redirectTo: 'log-in' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'trivia';\n}\n","<mat-toolbar color=\"accent\">\n    <mat-toolbar-row>\n\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SetupComponent } from './setup/setup.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\n\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from 'src/environments/environment';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { SameAmountValidatortDirective } from './setup/same-amount.directive';\nimport { GameInterfaceComponent } from './game-interface/game-interface.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SetupComponent,\n    LoginComponent,\n    SameAmountValidatortDirective,\n    GameInterfaceComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    FontAwesomeModule,\n    MatToolbarModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'app-game-interface',\n\ttemplateUrl: './game-interface.component.html',\n\tstyleUrls: ['./game-interface.component.scss']\n})\nexport class GameInterfaceComponent implements OnInit {\n\tanswers: string[] = [\"a\", \"b\", \"c\", \"d\"]\n\tconstructor() { }\n\n\tngOnInit(): void {\n\t}\n\n}\n","<mat-card class=\"example-card\">\n\t<mat-card-header>\n\t\t<mat-card-title>Question</mat-card-title>\n\t</mat-card-header>\n\t<mat-card-actions>\n\t\t<button mat-button *ngFor=\"let answer of answers\" [value]=\"answer\">\n\t\t\t{{ answer }}\n\t\t</button>\n\t</mat-card-actions>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons/faGoogle';\nimport { faFacebook } from '@fortawesome/free-brands-svg-icons/faFacebook';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  google = faGoogle;\n  facebook = faFacebook;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  signInWithGoogle(): void {\n    this.authService.loginWithGoogle();\n  }\n\n  signInWithFacebook(): void {\n    this.authService.loginWithFacebook();\n  }\n}\n","<button\n  id='google'\n  mat-raised-button\n  (click)='signInWithGoogle()'\n>\n  <fa-icon [icon]='google'></fa-icon>\n  <span>Google</span>\n</button>\n\n<button\n  id='facebook'\n  mat-raised-button\n  (click)='signInWithFacebook()'\n>\n  <fa-icon [icon]='facebook'></fa-icon>\n  <span>Facebook</span>\n</button>","import { Injectable } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase/app';\n\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { User } from '../interfaces/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  user: User;\n\n  constructor(\n    private af: AngularFirestore,\n    private afa: AngularFireAuth,\n    private router: Router\n  ) {\n    this.afa.authState.subscribe(user => {\n      if (user) {\n        this.user = user.providerData[0];\n\n        const usersRef = this.af.collection('users').doc(this.user.uid)\n\n        usersRef.update({...this.user}).catch(_ => {\n          usersRef.set({...this.user});\n        });\n      }\n    });\n  }\n\n  async loginWithGoogle() {\n    await this.afa.signInWithPopup(new auth.GoogleAuthProvider());\n    this.router.navigate(['set-up']);\n  }\n\n  async loginWithFacebook() {\n    await this.afa.signInWithPopup(new auth.FacebookAuthProvider());\n    this.router.navigate(['set-up']);\n  }\n\n  async logout(){\n    await this.afa.signOut();\n    this.router.navigate(['log-in']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SendDataService {\n  private subject = new Subject<any>();\n\n  constructor() { }\n\n  sendGameData(game: any[]) {\n    this.subject.next({game})\n  }\n\n  clearGameData() {\n    this.subject.next()\n  }\n\n  getGameData(): Observable<any> {\n    return this.subject.asObservable()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TopLevel } from '../interfaces/toplevel';\nimport { Category } from '../interfaces/category';\nimport { Result } from '../interfaces/result';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TriviaService {\n  categoriesUrl: string = 'https://opentdb.com/api_category.php';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getCategoriesObservable(): Observable<Array<Category>> {\n    return this.http.get<TopLevel>(this.categoriesUrl).pipe(\n      map((obj: TopLevel) => {\n        return obj.trivia_categories;\n      })\n    );\n  }\n\n  getQuestionsObservable(\n    amountOfQuestions: number,\n    categoryId: number,\n    difficulty: string,\n    questionType: string\n  ): Observable<Array<Result>> {\n    const a = amountOfQuestions ? `?amount=${amountOfQuestions}` : '';\n    const c = categoryId ? `?category=${categoryId}` : '';\n    const d = difficulty ? `?difficult=${difficulty}` : '';\n    const qt = questionType ? `?type=${questionType}` : '';\n    const url = `https://opentdb.com/api.php${a}${c}${d}${qt}`;\n    return this.http.get<TopLevel>(url).pipe(\n      map((obj: TopLevel) => {\n        return obj.results;\n      })\n    )\n  }\n}","import { Directive } from '@angular/core';\nimport { ValidatorFn, FormGroup, ValidationErrors, NG_VALIDATORS, Validator, AbstractControl, FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\nexport const sameAmountValidator: ValidatorFn = (control: FormGroup): ValidationErrors |\nnull => {\n  const amount = control.get('amount');\n  const questionNum = control.get('questionNum');\n\n  return amount && questionNum && questionNum.value % Number(amount.value) !== 0 ? {'notDivisibleByPlayers': true} :\n  null;\n}\n\n@Directive({\n  selector: '[appSameAmount]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: SameAmountValidatortDirective,\n  multi: true}]\n})\nexport class SameAmountValidatortDirective implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return (control && control.invalid);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TriviaService } from '../services/trivia.service';\nimport { Observable } from 'rxjs';\nimport { Category } from '../interfaces/category';\nimport { sameAmountValidator } from './same-amount.directive';\nimport { SendDataService } from '../services/send-data.service';\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.scss']\n})\nexport class SetupComponent implements OnInit {\n  categories$: Observable<Category[]>\n\n  game = {amount: 1, questionNum: 10, category:\"any\", difficulty:'any', type: 'any'}\n\n  setUpForm: FormGroup;\n  selected = 'any';\n\n\n  constructor(\n    private triviaService: TriviaService,\n    private sendDataService: SendDataService\n  ) { }\n\n  ngOnInit(): void {\n    this.setUpForm = new FormGroup({\n      'amount': new FormControl(this.game.amount),\n      'questionNum': new FormControl(this.game.questionNum, [\n        Validators.required,\n        Validators.max(50),\n        Validators.min(1),\n        sameAmountValidator\n      ]),\n      'category': new FormControl(this.game.category),\n      'difficulty': new FormControl(this.game.difficulty),\n      'type': new FormControl(this.game.type)\n    }, {validators: sameAmountValidator})\n\n    this.getCategories()\n  }\n\n  get questionNum() {return this.setUpForm.get('questionNum')}\n\n  getCategories() {\n    this.categories$ = this.triviaService.getCategoriesObservable();\n  }\n\n  sendData() {\n    this.sendDataService.sendGameData(this.setUpForm.value)\n  }\n\n  submitForm() {\n    console.log(this.setUpForm.value)\n    this.sendData()\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Game SetUp</mat-card-title>\n    <mat-card-content>\n        <form (ngSubmit)=\"submitForm()\" [formGroup]=\"setUpForm\"> \n            <mat-form-field>\n                <mat-label>Amount of Players:</mat-label>\n                <select matNativeControl formControlName=\"amount\">\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                </select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <!-- make sure it will divide correct between players -->\n                <mat-label>Number of Questions:</mat-label>\n                <input \n                matInput \n                type=\"number\"\n                required \n                max=\"50\"\n                min=\"1\"\n                id=\"questionNum\" \n                formControlName=\"questionNum\"\n                >\n            </mat-form-field>\n                <div *ngIf=\"questionNum.invalid && (questionNum.dirty || questionNum.touched)\">\n                    <mat-error *ngIf=\"questionNum.errors.max\">\n                        50 is the maximum amount\n                    </mat-error>\n                    <mat-error *ngIf=\"questionNum.errors.min\">\n                        Need at least one question to play\n                    </mat-error>\n                    <mat-error *ngIf=\"questionNum.errors.required\">\n                        Number is required\n                    </mat-error>\n                </div>\n                <mat-error *ngIf=\"setUpForm.errors?.notDivisibleByPlayers && setUpForm.invalid\">\n                    Please enter an amount so each player can have the same amount of questions\n                </mat-error>\n            \n            <mat-form-field>\n                <mat-label>Select Category:</mat-label>\n                <mat-select [(value)]=\"selected\" formControlName=\"category\">\n                    <mat-option value=\"any\">Any Category</mat-option>\n                    <mat-option *ngFor=\"let category of categories$ | async\" [value]=\"category.id\">{{category.name}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Select Difficulty:</mat-label>\n                <select matNativeControl formControlName=\"difficulty\">\n                    <option value=\"any\">Any Difficulty</option>\n                    <option value=\"easy\">Easy</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"hard\">Hard</option>\n                </select>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Select Type:</mat-label>\n                <select matNativeControl formControlName=\"type\">\n                    <option value=\"any\">Any Type</option>\n                    <option value=\"true/false\">True or False</option>\n                    <option value=\"boolean\">Mutiple Choice</option>\n                </select>\n            </mat-form-field>\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"setUpForm.invalid\">Let's Play!</button>\n        </form>\n    </mat-card-content>\n</mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyAayqPi75_IIAt0TeYOF1s6WDjQXsm_u6U',\n    authDomain: 'trivia-43e20.firebaseapp.com',\n    databaseURL: 'https://trivia-43e20.firebaseio.com',\n    projectId: 'trivia-43e20',\n    storageBucket: 'trivia-43e20.appspot.com',\n    messagingSenderId: '766024110773',\n    appId: '1:766024110773:web:3b5439860006b47a3424fc'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}